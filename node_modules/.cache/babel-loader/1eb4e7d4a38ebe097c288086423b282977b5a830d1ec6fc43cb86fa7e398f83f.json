{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\react-app-with-tailwind\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import QuizApp from './QuizApp';\nimport reportWebVitals from './reportWebVitals';\n// import App from './App';\n// import JoinName from './Destruct';\n// import Arrays from './Array';\n// import MyForm from './Form';\nimport Calculate from './Calculator';\n// import Time from './Time';\n// import Home from './Dashboard';\n// import UseState from './UseState';\n// import Add from './Add';\n// import Search from './Search';\n// import WhetherApp from './WhetherApp';\n\n// class Car {\n//   constructor(name,year){\n//     this.brand = name;\n//     this.years = year;\n//   }\n\n//   shows(){\n//     return 'The name of my car is ' + this.brand + ' made in ' + this.years;\n\n//   }\n// }\n\n// class Model extends Car {\n//   constructor(name,year,model) {\n//     super(name,year);\n//     this.models = model;\n//   }\n//   show(){\n//     return(\n//       <p className=' bg-red-500 text-white'>\n//         {this.shows()} It is a {this.models} brand\n//       </p>\n//     );\n//   }\n// }\n\n// const Click = () => {\n//   const [click, setClick] = useState (0);\n//      return(\n//         <>\n//           <h1>You've clicked {click} times</h1>\n//           <p>Your clicked time is { click % 2 == 0 ? 'even' : 'odd'}</p>\n//           <button onClick={() => setClick(click + 1)}>Click Me</button>\n//         </>\n//      );\n// }\n\n// class SetState extends React.Component {\n//   constructor (){\n//     super();\n//     this.state = { sayings : \"\"};\n//   }\n//   update(e){\n//     this.setState({ sayings : e.target.value });\n//   }\n\n//   render(){\n//     return(\n//       <div>\n//         Dare says <input type='text' ref='anything' onChange={this.update.bind(this)}/><br/>\n//         <i>{this.state.sayings}</i>\n//       </div>\n//     );\n//   }\n// }\n\n// const DemoComponent = (props) =>{\n//       return(\n//               <div>\n//                   <h2>Hello {props.user}</h2>\n//                   <Child user=\"Dare\" userId=\"5555\" />\n//               </div>\n//           );\n//   }\n\n// DemoComponent.defaultProps = {\n//   title : \"Mr\"\n// }\n\n//   const Child = (props) => {\n//     console.log(props);\n//       return(\n//           <>\n//             <h2> Hello {props.title} {props.user} , your User Id is {props.userId}</h2>\n//           </>\n//       );\n//   }\n\n// //const MyCar = new Model('Ford',1980,'Mustang');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Calculate, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","useState","ReactDOM","reportWebVitals","Calculate","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/USER/react-app-with-tailwind/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import QuizApp from './QuizApp';\nimport reportWebVitals from './reportWebVitals';\n// import App from './App';\n// import JoinName from './Destruct';\n// import Arrays from './Array';\n// import MyForm from './Form';\nimport Calculate from './Calculator';\n// import Time from './Time';\n// import Home from './Dashboard';\n// import UseState from './UseState';\n// import Add from './Add';\n// import Search from './Search';\n// import WhetherApp from './WhetherApp';\n\n// class Car {\n//   constructor(name,year){\n//     this.brand = name;\n//     this.years = year;\n//   }\n\n//   shows(){\n//     return 'The name of my car is ' + this.brand + ' made in ' + this.years;\n    \n//   }\n// }\n\n// class Model extends Car {\n//   constructor(name,year,model) {\n//     super(name,year);\n//     this.models = model;\n//   }\n//   show(){\n//     return(\n//       <p className=' bg-red-500 text-white'>\n//         {this.shows()} It is a {this.models} brand\n//       </p>\n//     );\n//   }\n// }\n\n// const Click = () => {\n//   const [click, setClick] = useState (0);\n//      return(\n//         <>\n//           <h1>You've clicked {click} times</h1>\n//           <p>Your clicked time is { click % 2 == 0 ? 'even' : 'odd'}</p>\n//           <button onClick={() => setClick(click + 1)}>Click Me</button>\n//         </>\n//      );\n// }\n\n// class SetState extends React.Component {\n//   constructor (){\n//     super();\n//     this.state = { sayings : \"\"};\n//   }\n//   update(e){\n//     this.setState({ sayings : e.target.value });\n//   }\n\n//   render(){\n//     return(\n//       <div>\n//         Dare says <input type='text' ref='anything' onChange={this.update.bind(this)}/><br/>\n//         <i>{this.state.sayings}</i>\n//       </div>\n//     );\n//   }\n// }\n\n// const DemoComponent = (props) =>{\n//       return(\n//               <div>\n//                   <h2>Hello {props.user}</h2>\n//                   <Child user=\"Dare\" userId=\"5555\" />\n//               </div>\n//           );\n//   }\n\n// DemoComponent.defaultProps = {\n//   title : \"Mr\"\n// }\n\n//   const Child = (props) => {\n//     console.log(props);\n//       return(\n//           <>\n//             <h2> Hello {props.title} {props.user} , your User Id is {props.userId}</h2>\n//           </>\n//       );\n//   }\n\n\n\n// //const MyCar = new Model('Ford',1980,'Mustang');\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Calculate />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA;AACA;AACA;AACA,OAAOC,SAAS,MAAM,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACPL,OAAA,CAACF,SAAS;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAChB,CAAC;;AAED;AACA;AACA;AACAZ,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}